// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "test",
            "email": "test@test.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/user/login": {
            "post": {
                "description": "user login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "user login",
                "parameters": [
                    {
                        "description": "struct",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/res.Result-res_Login"
                        }
                    },
                    "401": {
                        "description": "request params format error",
                        "schema": {
                            "$ref": "#/definitions/xerror.Error"
                        }
                    },
                    "402": {
                        "description": "request params validate error",
                        "schema": {
                            "$ref": "#/definitions/xerror.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "req.Login": {
            "type": "object",
            "required": [
                "email",
                "pwd"
            ],
            "properties": {
                "email": {
                    "description": "Email user email",
                    "type": "string"
                },
                "pwd": {
                    "description": "Pwd user password",
                    "type": "string"
                }
            }
        },
        "res.Login": {
            "type": "object",
            "required": [
                "id",
                "token"
            ],
            "properties": {
                "id": {
                    "description": "Id user id",
                    "type": "integer"
                },
                "token": {
                    "description": "Token user token",
                    "type": "string"
                }
            }
        },
        "res.Result-res_Login": {
            "type": "object",
            "required": [
                "code",
                "msg"
            ],
            "properties": {
                "code": {
                    "description": "Code response code",
                    "type": "integer"
                },
                "data": {
                    "description": "Data response payload",
                    "allOf": [
                        {
                            "$ref": "#/definitions/res.Login"
                        }
                    ]
                },
                "msg": {
                    "description": "Msg response msg",
                    "type": "string"
                }
            }
        },
        "xerror.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "CMS Service API",
	Description:      "cms service api",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
